#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '/stylesheet/' do
  # don’t filter or layout
end

compile '/blog/' do
  filter :haml
  layout 'default'
end

compile '/projects/' do
  filter :haml
  layout 'default'
end

compile '/blog/*' do
  if item[:extension] == 'Rmd'
    filter :knitr
  end
  filter :pandoc, ['mathjax']
  filter :colorize_syntax, :default_colorizer => :pygmentsrb
  layout 'post'
  layout 'default'
end

compile '/projects/*' do
  if item[:extension] == 'Rmd'
    filter :knitr
  end
  filter :pandoc, ['mathjax']
  filter :colorize_syntax, :default_colorizer => :pygmentsrb
  layout 'project'
  layout 'default'
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  elsif item.identifier == '/CNAME/'
    # Don't do anything; leave it as is.
  else
    if item[:extension] == 'Rmd'
      filter :knitr
    end
    filter :pandoc, ['mathjax']
    layout 'default'
  end
end

route '/stylesheet/' do
  '/style.css'
end

route '/blog/' do
  '/blog/index.html'
end

route '/projects/' do
  '/projects/index.html'
end

route '/blog/*' do
  root = item.attributes.has_key?(:created_at) ?
    attribute_to_time(item[:created_at]).strftime('/blog/%Y/%m/%d') : '/draft'
  [root, ShortBlogName(item), 'index.html'].join('/')
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  elsif item.identifier == '/CNAME/'
    item.identifier.chop
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :haml, :ugly => true
